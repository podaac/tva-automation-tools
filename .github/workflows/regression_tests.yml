
name: Run Regression Tests
# Controls when the workflow will run
on:
  schedule:
    - cron: '10 11 * * *'  # Set the cron schedule for 2am PST
  workflow_dispatch:

jobs:
  build:
    name: Run Regression Tests
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: regression_tests
    steps:

      #########################################################################
      # Environment Setup
      #########################################################################
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Poetry
        uses: abatilo/actions-poetry@v3.0.0
        with:
          poetry-version: 1.8.5

      #########################################################################
      # Install & Run Pylint & Flake
      #########################################################################
      - name: Poetry Steps
        run: |
          poetry install

      #########################################################################
      # Setup Token for GSpread
      #########################################################################
      - name: Setup Token
        env:
          GOOGLE_TOKEN: ${{ secrets.GOOGLE_TOKEN }}
        run: |
          mkdir -p ~/.config/gspread
          echo "$GOOGLE_TOKEN" > ~/.config/gspread/service_account.json

      #########################################################################
      # Start the Repo Status Updater
      #########################################################################
      - name: Run Regression Tests
        env:
          CMR_USER: ${{ secrets.CMR_USER }}
          CMR_PASS: ${{ secrets.CMR_PASS }}
          SPREADSHEET_ID: ${{ secrets.HITIDE_AWS_SHEET_ID }}
        run: |
          poetry run python regression_tests.py
          pwd
          ls -alR

      #########################################################################
      # Run TIG in container
      #########################################################################
      - name: Setup and Run TIG in Docker
        uses: docker://python:3.11-slim
        with:
          entrypoint: /bin/bash
          args: |-
            -c "
            # Install TIG
            pip install podaac-tig==0.13.0
            
            # Change to workspace directory
            cd /github/workspace

            ls -alR
            
            # Run TIG commands with access to workspace files
            tig -h
            #tig \
            #  --input_file /github/workspace/input.nc \
            #  --output_dir /github/workspace/output \
            #  --config_file /github/workspace/config.json
            
            # Create any additional files if needed
            touch /github/workspace/tig_complete.txt
            "
