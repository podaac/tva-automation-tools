
name: Run Regression Tests
# Controls when the workflow will run
on:
  schedule:
    - cron: '10 11 * * *'  # Set the cron schedule for 2am PST
  workflow_dispatch:

jobs:
  build:
    name: Run Regression Tests
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: regression_tests
    steps:

      #########################################################################
      # Environment Setup
      #########################################################################
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Poetry
        uses: abatilo/actions-poetry@v3.0.0
        with:
          poetry-version: 1.8.5

      #########################################################################
      # Install & Run Pylint & Flake
      #########################################################################
      - name: Poetry Steps
        run: |
          poetry install

      #########################################################################
      # Setup Token for GSpread
      #########################################################################
      - name: Setup Token
        env:
          GOOGLE_TOKEN: ${{ secrets.GOOGLE_TOKEN }}
        run: |
          mkdir -p ~/.config/gspread
          echo "$GOOGLE_TOKEN" > ~/.config/gspread/service_account.json

      #########################################################################
      # Start the Repo Status Updater
      #########################################################################
      - name: Run Regression Tests
        env:
          CMR_USER: ${{ secrets.CMR_USER }}
          CMR_PASS: ${{ secrets.CMR_PASS }}
          SPREADSHEET_ID: ${{ secrets.HITIDE_AWS_SHEET_ID }}
        run: |
          poetry run python regression_tests.py
          pwd
          ls -alR
          du -h -d 3 workdir

      #########################################################################
      # Checkout TIG Configuration Repository
      #########################################################################
      - name: Checkout TIG Configuration
        uses: actions/checkout@v4
        with:
          repository: podaac/forge-tig-configuration
          path: forge-tig-configuration
          token: ${{ secrets.GH_READ_TOKEN }}

      #########################################################################
      # Run TIG in container
      #########################################################################
      - name: Setup and Run TIG 0.13.0 in Docker
        uses: docker://python:3.10-slim       # Shoud match the lambda docker image version in the tig repo
        with:
          platform: linux/arm64
          entrypoint: /bin/bash
          args: |-
            -c "
            arch
            # Install TIG
            pip install podaac-tig==0.13.0
            
            # Change to workspace directory
            cd regression_tests

            python run_tig_regression.py --workdir workdir -od tig_0.13.0
            pwd
            ls -alR
            du -h -d 3 workdir
            "

      #########################################################################
      # Run TIG in container
      #########################################################################
      - name: Setup and Run TIG 0.13.2rc1 in Docker
        uses: docker://python:3.10-slim       # Shoud match the lambda docker image version in the tig repo
        with:
          platform: linux/arm64
          entrypoint: /bin/bash
          args: |-
            -c "
            arch
            # Install TIG
            pip install --index-url https://test.pypi.org/simple --extra-index-url https://pypi.org/simple podaac-tig==0.13.2rc1

            # Change to workspace directory
            cd regression_tests

            python run_tig_regression.py --workdir workdir -od tig_0.13.2rc1
            pwd
            ls -alR
            du -h -d 3 workdir
            "

      #########################################################################
      # Run forge-py in container
      #########################################################################
      - name: Setup and Run forge-py 0.4.0 in Docker
        uses: docker://python:3.11-slim       # Should match the lambda docker image version in the forge-py repo
        with:
          platform: linux/arm64
          entrypoint: /bin/bash
          args: |-
            -c "
            arch
            # Install forge-py
            pip install forge-py==0.4.0
            
            # Change to workspace directory
            cd regression_tests

            python run_forge_py_regression.py --workdir workdir -od 'forge-py_0.4.0'
            pwd
            ls -alR
            du -h -d 3 workdir
            "

      #########################################################################
      # Run forge in container
      #########################################################################
      - name: Setup and Run forge 0.12.1-rc.1 in Docker
        uses: docker://mcr.microsoft.com/openjdk/jdk:11-ubuntu
        with:
          platform: linux/arm64
          entrypoint: /bin/bash
          args: |-
            -c "
            arch
            # Install Python 3
            apt-get update && apt-get install -y python3 curl && apt-get clean

            # Change to workspace directory
            cd regression_tests

            # Download Footprint jar
            curl -sL https://github.com/podaac/forge/releases/download/0.12.1-rc.1/footprint_0.12.1-rc.1.jar -o footprint.jar

            python3 run_forge_regression.py --workdir workdir -od forge_0.12.1-rc.1
            "

      #########################################################################
      # Run forge (Cumulus OPS Version) in container
      #########################################################################
      - name: Setup and Run forge 0.11.0 in Docker
        uses: docker://mcr.microsoft.com/openjdk/jdk:11-ubuntu
        with:
          platform: linux/arm64
          entrypoint: /bin/bash
          args: |-
            -c "
            arch
            # Install Python 3
            apt-get update && apt-get install -y python3 curl && apt-get clean

            # Change to workspace directory
            cd regression_tests

            # Download Footprint jar
            curl -sL https://github.com/podaac/forge/releases/download/0.11.0/footprint_0.11.0.jar -o footprint.jar

            python3 run_forge_regression.py --workdir workdir -od forge_0.11.0
            pwd
            ls -alR
            du -h -d 3 workdir
            "

      #########################################################################
      # Update Sheet with Results
      #########################################################################
      - name: Run Update Sheet with Results
        env:
          SPREADSHEET_ID: ${{ secrets.HITIDE_AWS_SHEET_ID }}
        run: |
          poetry run python update_regression_results.py

      #########################################################################
      # Get disk usage of workdir and its subdirectories
      #########################################################################
      - name: Get Disk Usage
        run: |
          pwd
          du -h -d 3 workdir
